import cv2
import numpy as np
class visionFilter:
    def __init__(window_size, self, disease, severity):
        self.disease = disease
        self.severity = severity
        self.size = window_size

    def build_mask(self, disease, size, severity):
        h,w = self.size
        if self.disease == 'glaucoma':
            # Decrease FOV by 19% each severity level
            severity_factor = 0.19
            mask = np.zeros(h,w)
            center = (w//2, h//2)
            # Severity controls tunnel width
            major_axis = int(w - (severity * severity_factor * w))
            # Maintain approx 2:3 ratio of w:h for real eye
            minor_axis = int(major_axis * 2 / 3)
            axes = major_axis, minor_axis
            # Draw an entire (0-360) filled (-1) ellipse where vision remains in center (on/255)
            return cv2.elipse(mask, center, axes, 0, 0, 360, 255, -1)
        elif self.disease == 'nasal-step':
            mask = np.ones((h, w), dtype=np.uint8) * 255
            severity_factor = 0.3
            # carve out a vertical wedge on the nasal (left) side
            step_width = int(self.severity * w * severity_factor) # severity controls wedge width
            mask[:, :step_width] = 0                      
            return mask
        elif self.disease == 'scotoma':
            severity_factor = 1.05
            mask = np.zeros(h,w)
            # Placeholder pos (upper third)
            center = (w//3, h//3)
            # hardcoded for small scotoma
            radius = w//15
            return cv2.circle(mask, center, radius, 255, -1)
        elif self.disease == 'depression':
            mask = np.ones((h, w), dtype=np.uint8) * 255
            outer_axes = (int(self.severity * w/6), int(self.severity * h/6))
            inner_axes = (int(self.severity * w/10), int(self.severity * h/10))
            center = (w//2, h//2)
            # Outer ellipse region: set to partial loss (e.g. 128)
            cv2.ellipse(mask, center, outer_axes, 0, 0, 360, 128, -1)
            # Inner ellipse region: set to full loss (0)
            cv2.ellipse(mask, center, inner_axes, 0, 0, 360,   0, -1)
            return mask
        else:
            raise Exception("Invalid argument: Please specify a vision loss type listed in documentation. ")

    